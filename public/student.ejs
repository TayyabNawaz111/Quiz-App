<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Student Dashboard</title>
    <link
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="container">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <a class="navbar-brand" href="http://localhost:3000/">Back</a>
      <div class="collapse navbar-collapse">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/student">Student</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/teacher">Teacher</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/admin">Admin</a>
          </li>
        </ul>
      </div>
    </nav>

    <h1 class="my-4">Student Dashboard</h1>
    <h3>Course Material:</h3>
    <div class="courseMaterial">No files uploaded yet.</div>
    <div id="quiz-selection" class="mt-4">
      <h2>Available Quizzes</h2>
      <div id="quiz-list" class="list-group"></div>
    </div>

    <div id="quiz-container" class="mt-4" style="display: none">
      <div class="container text-center mt-5">
        <div id="countdown" class="badge badge-danger p-3 m-4"></div>
      </div>
      <div id="questions-container" class="list-group"></div>
      <button id="submit-quiz" class="btn btn-primary mt-3">Submit Quiz</button>
    </div>

    <div id="result-container" class="mt-4" style="display: none">
      <h2>Quiz Result</h2>
      <p id="score" class="lead"></p>
      <button id="retake-quiz" class="btn btn-secondary">Retake Quiz</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const quizList = document.getElementById("quiz-list");
        const quizContainer = document.getElementById("quiz-container");
        let countdown = document.getElementById("countdown");
        const questionsContainer = document.getElementById(
          "questions-container"
        );
        const submitQuizButton = document.getElementById("submit-quiz");
        const resultContainer = document.getElementById("result-container");
        const scoreElement = document.getElementById("score");
        const retakeQuizButton = document.getElementById("retake-quiz");
        let currentQuiz = null;
        const courseMaterialDiv = document.querySelector(".courseMaterial");

        // Fetch the file names from the server
        fetch("http://localhost:3000/fileNames", { mode: "cors" })
          .then((response) => response.json())
          .then((fileNames) => {
            if (fileNames.length > 0) {
              courseMaterialDiv.innerHTML = "";
              fileNames.forEach((fileName,index) => {
                const fileDiv = document.createElement("div");
                fileDiv.classList.add("d-flex", "align-items-center", "mb-2");

                const fileNameSpan = document.createElement("span");
                fileNameSpan.textContent = `${++index}. ${fileName}`;
                fileNameSpan.classList.add("mr-3");

                const downloadButton = document.createElement("a");
                downloadButton.textContent = "Download";
                downloadButton.href = `http://localhost:3000/download?file=${encodeURIComponent(fileName)}`;
                downloadButton.classList.add("btn", "btn-primary", "btn-sm" , "ml-auto");

                fileDiv.appendChild(fileNameSpan);
                fileDiv.appendChild(downloadButton);
                courseMaterialDiv.appendChild(fileDiv);
              });
            } else {
              courseMaterialDiv.textContent = "No files uploaded yet.";
            }
          })
          .catch((error) => {
            console.error("Error fetching file names:", error);
            courseMaterialDiv.textContent = "Failed to load course materials.";
          });

        fetch("http://localhost:3000/quizzes", { mode: "cors" })
          .then((response) => response.json())
          .then((quizzes) => {
            quizzes.forEach((quiz) => {
              const quizDiv = document.createElement("div");
              quizDiv.classList.add(
                "list-group-item",
                "d-flex",
                "justify-content-between",
                "align-items-center"
              );

              const startButton = document.createElement("button");
              startButton.textContent = "Start Quiz";
              startButton.classList.add("btn", "btn-success");
              startButton.addEventListener("click", () => startQuiz(quiz));
              quizDiv.appendChild(document.createTextNode(quiz.title));
              quizDiv.appendChild(startButton);
              quizList.appendChild(quizDiv);
            });
          })
          .catch((error) => console.error("Error fetching quizzes:", error));
        let countdownInterval;
        const startQuiz = (quiz) => {
          currentQuiz = quiz;
          questionsContainer.innerHTML = "";
          let count = 1;
          currentQuiz.questions.forEach((question, index) => {
            if (question.state === "true") {
              const questionDiv = document.createElement("div");
              questionDiv.classList.add("list-group-item");

              const questionText = document.createElement("p");
              questionText.textContent = `${count++}. ${question.question}`;
              questionDiv.appendChild(questionText);

              question.options.forEach((option) => {
                const optionLabel = document.createElement("label");
                optionLabel.classList.add("d-block");

                const optionInput = document.createElement("input");
                optionInput.type = "radio";
                optionInput.name = `question-${index}`;
                optionInput.value = option;
                optionInput.classList.add("mr-2");

                optionLabel.appendChild(optionInput);
                optionLabel.appendChild(document.createTextNode(option));
                questionDiv.appendChild(optionLabel);
              });

              questionsContainer.appendChild(questionDiv);
            }
          });

          quizContainer.style.display = "block";
          resultContainer.style.display = "none";

          // Reverse countdown logic
          console.log(quiz.timeLimit);
          let countdownValue = quiz.timeLimit; // start from 10 seconds
          countdown.textContent = `${countdownValue}s`;

          countdownInterval = setInterval(() => {
            countdownValue--;
            countdown.textContent = `${countdownValue}s`;

            if (countdownValue < 0) {
              clearInterval(countdownInterval);
              // Automatically submit the quiz when the time is up
              alert("Time's up!");
              submitQuizButton.click();
            }
          }, 1000); // 1000 milliseconds = 1 second
        };

        submitQuizButton.addEventListener("click", () => {
          clearInterval(countdownInterval);
          let score = 0;
          currentQuiz.questions.forEach((question, index) => {
            const selectedOption = document.querySelector(
              `input[name="question-${index}"]:checked`
            );
            if (selectedOption && selectedOption.value === question.answer) {
              score++;
            }
          });

          scoreElement.textContent = `You scored ${score} out of ${currentQuiz.questions.length}`;
          quizContainer.style.display = "none";
          resultContainer.style.display = "block";
        });

        retakeQuizButton.addEventListener("click", () => {
          quizContainer.style.display = "none";
          resultContainer.style.display = "none";
        });
      });
    </script>
  </body>
</html>
