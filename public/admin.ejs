<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Admin Dashboard</title>
</head>
<body>
    <a href="http://localhost:3000/">Back</a>
    <a href="http://localhost:3000/student">Student</a>
    <a href="http://localhost:3000/teacher">Teacher</a>
    <a href="http://localhost:3000/admin">Admin</a>
    <h1>Admin Dashboard</h1>
    <div id="create-user">
        <h2>Create a User</h2>
        <form id="user-form">
            <input type="text" id="user-name" placeholder="User Name" required />
            <select id="user-role" required>
                <option value="" disabled selected>Select Role</option>
                <option value="teacher">Teacher</option>
                <option value="admin">Admin</option>
                <option value="student">Student</option>
            </select>
            <button type="submit">Create User</button>
        </form>
    </div>
    <div id="show-users">
        <h2>Users List</h2>
        <div id="users-container"></div>
    </div>
    <div id="show-quizzes">
        <h2>Quizzes List</h2>
        <div id="quizzes-container"></div>
    </div>
</body>
</html>

<script>
document.addEventListener("DOMContentLoaded", () => {
    const userForm = document.getElementById("user-form");
    const usersContainer = document.getElementById("users-container");
    const quizzesContainer = document.getElementById("quizzes-container");

    let totalUsers = 0;

    function displayUsers() {
        fetch("http://localhost:3000/users", {
            method: "GET",
        })
        .then((response) => response.json())
        .then((users) => {
            usersContainer.innerHTML = "";
            users.forEach((user) => {
                totalUsers++;
                const userDiv = document.createElement("div");
                userDiv.textContent = `ID: ${user.id}, Name: ${user.name}, Role: ${user.role}`;

                const deleteButton = document.createElement("button");
                deleteButton.textContent = "Delete";
                deleteButton.addEventListener("click", () => deleteUser(user.id));
                userDiv.appendChild(deleteButton);

                usersContainer.appendChild(userDiv);
            });
        })
        .catch((error) => {
            console.error("Error fetching users:", error);
        });
    }

    function displayQuizzes() {
        fetch("http://localhost:3000/quizzes", {
            method: "GET",
        })
        .then((response) => response.json())
        .then((quizzes) => {
          console.log(quizzes[0]);
          const quizArray = quizzes[0];
            quizzesContainer.innerHTML = "";
            // let index = 0;
            quizArray.questions.forEach((quiz,index) => {
              console.log(quizArray.questions[index].question);
                const quizDiv = document.createElement("div");
                quizDiv.textContent = `ID: ${quizArray.questions[index].QID}, Questions: ${quizArray.questions[index].question}`;

                const deleteButton = document.createElement("button");
                deleteButton.textContent = "Delete";
                // console.log(quizArray.questions[index].QID);
                deleteButton.addEventListener("click", () => deleteQuiz(quizArray.questions[index].QID));
                quizDiv.appendChild(deleteButton);

                quizzesContainer.appendChild(quizDiv);
                // index++;
            });
        })
        .catch((error) => {
            console.error("Error fetching quizzes:", error);
        });
    }

    userForm.addEventListener("submit", (e) => {
        e.preventDefault();

        const userName = document.getElementById("user-name").value;
        const userRole = document.getElementById("user-role").value;

        const newUser = {
            id: totalUsers + 1,
            role: userRole,
            name: userName,
        };

        fetch("/add-user", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(newUser),
        })
        .then((response) => response.json())
        .then((data) => {
            userForm.reset();
            displayUsers();
        })
        .catch((error) => {
            console.error("Error:", error);
        });
    });

    function deleteUser(userId) {
        fetch(`/delete-user`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ id: userId }),
        })
        .then((response) => response.json())
        .then((data) => {
            displayUsers();
        })
        .catch((error) => {
            console.error("Error:", error);
        });
    }

    function deleteQuiz(quizId) {
        fetch(`/delete-quiz`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ id: quizId }),
        })
        .then((response) => response.json())
        .then((data) => {
            displayQuizzes();
        })
        .catch((error) => {
            console.error("Error:", error);
        });
    }

    displayUsers();
    displayQuizzes();
});
</script>
