<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="container">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <a class="navbar-brand" href="http://localhost:3000/">Back</a>
      <div class="collapse navbar-collapse">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/student">Student</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/teacher">Teacher</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="http://localhost:3000/admin">Admin</a>
          </li>
        </ul>
      </div>
    </nav>
    <h1 class="my-4">Admin Dashboard</h1>

    <div class="card mb-4">
      <div class="card-header">
        <h2>Create a User</h2>
      </div>
      <div class="card-body">
        <form id="user-form">
          <div class="form-group">
            <input
              type="text"
              id="user-name"
              class="form-control"
              placeholder="User Name"
              required
            />
          </div>
          <div class="form-group">
            <select id="user-role" class="form-control" required>
              <option value="" disabled selected>Select Role</option>
              <option value="teacher">Teacher</option>
              <option value="admin">Admin</option>
              <option value="student">Student</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary">Create User</button>
        </form>
      </div>
    </div>

    <div class="card mb-4">
      <div class="card-header">
        <h2>Users List</h2>
      </div>
      <div class="card-body" id="users-container">
        <!-- User list will be populated here -->
      </div>
    </div>

    <div class="card mb-4">
      <div class="card-header">
        <h2>Quizzes List</h2>
      </div>
      <div class="card-body" id="quizzes-container">
        <!-- Quiz list will be populated here -->
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const userForm = document.getElementById("user-form");
        const usersContainer = document.getElementById("users-container");
        const quizzesContainer = document.getElementById("quizzes-container");

        let totalUsers = 0;

        function displayUsers() {
          fetch("http://localhost:3000/users", {
            method: "GET",
          })
            .then((response) => response.json())
            .then((users) => {
              usersContainer.innerHTML = "";
              users.forEach((user) => {
                totalUsers++;
                const userDiv = document.createElement("div");
                userDiv.className =
                  "d-flex justify-content-between align-items-center mb-2";
                userDiv.innerHTML = `
                            <span>ID: ${user.id}, Name: ${user.name}, Role: ${user.role}</span>
                            <button class="btn btn-danger btn-sm">Delete</button>
                        `;

                const deleteButton = userDiv.querySelector("button");
                deleteButton.addEventListener("click", () =>
                  deleteUser(user.id)
                );
                usersContainer.appendChild(userDiv);
              });
            })
            .catch((error) => {
              console.error("Error fetching users:", error);
            });
        }

        function displayQuizzes() {
          fetch("http://localhost:3000/quizzes", {
            method: "GET",
          })
            .then((response) => response.json())
            .then((quizzes) => {
              const quizArray = quizzes[0];
              quizzesContainer.innerHTML = "";
              quizArray.questions.forEach((quiz, index) => {
                const quizDiv = document.createElement("div");
                quizDiv.className =
                  "d-flex justify-content-between align-items-center mb-2";
                quizDiv.innerHTML = `
                            <span>ID: ${quiz.QID}, Question: ${quiz.question}</span>
                            <button class="btn btn-danger btn-sm">Delete</button>
                        `;

                const deleteButton = quizDiv.querySelector("button");
                deleteButton.addEventListener("click", () =>
                  deleteQuiz(quiz.QID)
                );
                quizzesContainer.appendChild(quizDiv);
              });
            })
            .catch((error) => {
              console.error("Error fetching quizzes:", error);
            });
        }

        userForm.addEventListener("submit", (e) => {
          e.preventDefault();

          const userName = document.getElementById("user-name").value;
          const userRole = document.getElementById("user-role").value;

          const newUser = {
            id: totalUsers + 1,
            role: userRole,
            name: userName,
          };

          fetch("/add-user", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(newUser),
          })
            .then((response) => response.json())
            .then((data) => {
              userForm.reset();
              displayUsers();
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        });

        function deleteUser(userId) {
          fetch(`/delete-user`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id: userId }),
          })
            .then((response) => response.json())
            .then((data) => {
              displayUsers();
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }

        function deleteQuiz(quizId) {
          fetch(`/delete-quiz`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id: quizId }),
          })
            .then((response) => response.json())
            .then((data) => {
              displayQuizzes();
            })
            .catch((error) => {
              console.error("Error:", error);
            });
        }

        displayUsers();
        displayQuizzes();
      });
    </script>
  </body>
</html>
